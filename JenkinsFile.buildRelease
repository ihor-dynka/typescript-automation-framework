#!/usr/bin/env groovy
pipeline {
    agent any

    options {
        gitLabConnection('ts-automation-framework')
    }
    
    tools {nodejs 'node'}

    parameters {
        gitParameter branchFilter: 'origin/(.*)', defaultValue: 'master', name: 'BRANCH', type: 'PT_BRANCH'
    }
    
    stages {
        stage ('Checkout from Version Control') {
            steps {
                updateGitlabCommitStatus name: 'jenkins', state: 'running'
                checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: 'origin/merge-requests/${gitlabMergeRequestIid}']], extensions: [], userRemoteConfigs: [[credentialsId: 'git_repo_credentials', refspec: '+refs/merge-requests/*/head:refs/remotes/origin/merge-requests/*', url: 'https://git.epam.com/ihor_dynka/ts-automation-framework.git']]]
            }
        }
        stage ('Remove old images') {
            steps {
                sh 'docker rmi $(docker images api_test:$(BRANCH))'
            }
        }
        stage ('Build API Test Image') {
            steps {
                sh 'docker build . -t api_test:${BRANCH}'
            }
        }
    }

    post {
        success {
            updateGitlabCommitStatus state: 'success'
        }
        failure {
            updateGitlabCommitStatus state: 'failed'
        }
    }
}