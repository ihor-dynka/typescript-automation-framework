pipeline {
    agent any
    
    tools {nodejs 'node'}

    parameters {
        gitParameter branchFilter: 'origin/(.*)', defaultValue: 'master', name: 'BRANCH', type: 'PT_BRANCH'
        choice choices: ['qa', 'uat'], name: 'ENVIRONMENT'
    }
    
    stages {
        stage ('Build API Test Image') {
            steps {
                sh 'docker build . -t api_test_${BUILD_NUMBER}'
            }
        }

        stage ('Run API Test') {
            steps {
                sh 'docker run api_test_${BUILD_NUMBER} --name api_test_${BUILD_NUMBER} -e ENVIRONMENT=${ENVIRONMENT}'
            }
        }
    }

    post {
      always {
          
        script {
            sh 'docker rm api_test_${BUILD_NUMBER}'
            sh 'docker rmi api_test_${BUILD_NUMBER}'
        }
          
        junit (
            allowEmptyResults: true,
            testResults: '**/test-results.xml',
            skipPublishingChecks: true
        )
      }
   } 
}
